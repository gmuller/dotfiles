{"name":"autocomplete-haskell","main":"./lib/autocomplete-haskell","version":"0.4.5","description":"Autocomplete-plus provider for haskell","repository":{"type":"git","url":"https://github.com/atom-haskell/autocomplete-haskell"},"license":"MIT","engines":{"atom":">=0.174.0 <2.0.0"},"dependencies":{"fuzzaldrin":"^2.1.0","atom-backend-helper":"~1.1.0"},"providedServices":{"autocomplete.provider":{"versions":{"2.0.0":"autocompleteProvider_2_0_0"}}},"consumedServices":{"haskell-completion-backend":{"versions":{"0.1.0":"consumeCompBack","^1.0.0":"consumeCompBack"}}},"readme":"# autocomplete-haskell atom package\n\nAutocomplete-haskell provides autocompletion facilities for your Haskell\nhacking.\nIt relies on scope names provided by [language-haskell][1] and `haskell-completion-backend` service, provided by [haskell-ghc-mod][2]\n\nYou can show auto-completions for hole `_`. This will try to find replacements\nbased on type. It's no magic though, so if hole has some crazy type, it won't\nfind anything.\n\nCurrent autocompletion scopes:\n\n* Import module name\n* Import module symbols\n* Language pragmas\n* OPTIONS_GHC pragma\n* Type name\n* Class name\n* Symbol name\n\nSadly, it does not pick up types and/or other symbols defined in current file\n(ghc-mod seems to be incapable of this feat), so for this you have to rely on\ndefault autocomplete-plus SymbolProvider.\n\n## Dependencies\n\nAtom packages:\n* [language-haskell][1]\n* [haskell-ghc-mod][2]\n\n[1]: https://atom.io/packages/language-haskell\n[2]: https://atom.io/packages/haskell-ghc-mod\n\n![Screencast](https://raw.githubusercontent.com/lierdakil/autocomplete-haskell/master/screencast.gif)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/atom-haskell/autocomplete-haskell/issues"},"homepage":"https://github.com/atom-haskell/autocomplete-haskell","_id":"autocomplete-haskell@0.4.5","_shasum":"cebddc4e2210293fcf5437d9d5bed16129f6645e","_resolved":"file:../d-115615-23378-uloxbc/package.tgz","_from":"../d-115615-23378-uloxbc/package.tgz"}